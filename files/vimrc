execute pathogen#infect()

filetype on
syntax on

if has("autocmd")
  augroup lineRestore
    autocmd!
    au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
  augroup END
endif

let mapleader = ","
let maplocalleader = "\\"

set number norelativenumber
set laststatus=2

cnoremap w!! w !sudo tee %
inoremap jk <esc>

set splitright splitbelow

" Capitalize current word
inoremap <c-u> <esc>mzviwUg`za

" Move current line up or down
nnoremap - mz:m +1<cr>g`z
nnoremap _ mz:m -2<cr>g`z

" Edit/source vimrc
nnoremap <leader>ev :vsplit $MYVIMRC<cr>
nnoremap <leader>sv :source $MYVIMRC<cr>

" Surround current word with quotes
nnoremap <leader>" mzviw<esc>a"<esc>bi"<esc>g`zl
nnoremap <leader>' mzviw<esc>a'<esc>bi'<esc>g`zl

" Surround visual selection with quotes
vnoremap <leader>" <esc>g`<i"<esc>g`>la"<esc>
vnoremap <leader>' <esc>g`<i'<esc>g`>la'<esc>

" Surround current word with parentheses
nnoremap <leader>( mzviw<esc>a(<esc>bi)<esc>g`zl
nnoremap <leader>) mzviw<esc>a(<esc>bi)<esc>g`zl

" Surround visual selection with quotes
vnoremap <leader>( <esc>g`>a)<esc>g`<i(<esc>
vnoremap <leader>) <esc>g`>a)<esc>g`<i(<esc>

" Make current file executable
nnoremap <leader>755 :!chmod 755 %<cr>

" Commenting
if has("autocmd")
  augroup commenting
    autocmd!
"    autocmd FileType c,cpp,java,kerboscript nnoremap <buffer> <localleader>c mzI//<esc>g`zll
"    autocmd FileType python,sh  nnoremap <buffer> <localleader>c mzI#<esc>g`zl
"    autocmd FileType vim        nnoremap <buffer> <localleader>c mzI"<esc>g`zl
    autocmd FileType c,cpp,java,kerboscript nnoremap <buffer> <localleader>c mz0i//<esc>g`zll
    autocmd FileType python,sh  nnoremap <buffer> <localleader>c mz0i#<esc>g`zl
    autocmd FileType vim        nnoremap <buffer> <localleader>c mz0i"<esc>g`zl
    autocmd FileType c,cpp,java,kerboscript vnoremap <buffer> <localleader>c <esc>:'<,'>s/^/\/\//<cr>
    autocmd FileType python,sh  vnoremap <buffer> <localleader>c <esc>:'<,'>s/^/#/<cr>
    autocmd FileType vim        vnoremap <buffer> <localleader>c <esc>:'<,'>s/^/"/<cr>
    autocmd FileType vim nnoremap <buffer> <localleader>C mz:s/^\(\s*\)"/\1/<cr>g`zh
    autocmd FileType vim vnoremap <buffer> <localleader>C <esc>:'<,'>s/^\(\s*\)"/\1/<cr>
    autocmd FileType kerboscript nnoremap <buffer> <localleader>C mz:s#^\(\s*\)//#\1#<cr>g`zhh
    autocmd FileType kerboscript vnoremap <buffer> <localleader>C <esc>:'<,'>s#^\(\s*\)//#\1#<cr>
  augroup END
endif

" Stuff from Learn Vimscript the Hard Way that I will probably delete
"onoremap in( :<c-u>normal! f(vi(<cr>
"onoremap il( :<c-u>normal! F(vi(<cr>
"onoremap an( :<c-u>normal! f(va(<cr>
"onoremap al( :<c-u>normal! F(va(<cr>
"onoremap in{ :<c-u>normal! f{vi{<cr>
"onoremap il{ :<c-u>normal! F{vi{<cr>
"onoremap an{ :<c-u>normal! f{va{<cr>
"onoremap al{ :<c-u>normal! F{va{<cr>

color xoria256-custom

" Remove trailing spaces
function! StripTrailingWhitespace()
  normal mz
  %s/\s\+$//e
  normal g`z
endfunction

if has("autocmd")
  augroup removeTrailingWhitespace
    autocmd!
    autocmd BufWritePre * :call StripTrailingWhitespace()
  augroup END
endif
